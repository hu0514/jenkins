pipeline{
    agent {label 'master'}
    environment{
        def BUILD_USER=sh(returnStdout:true,script: "curl ${JENKINS_URL}/job/${JOB_NAME}/${BUILD_ID}/api/xml|awk '{match(\$0,\"<userId>\")}{printf substr(\$0,RSTART+RLENGTH)}' | awk -F \"<\" '{printf \$1}'")
        def timestamp=sh(returnStdout:true,script: "curl ${JENKINS_URL}/job/${JOB_NAME}/${BUILD_ID}/api/xml|awk '{match(\$0,\"<timestamp>\")}{printf substr(\$0,RSTART+RLENGTH)}' | awk -F \"<\" '{printf substr(\$1,1,10)}'")
        def BUILD_TIME=sh(returnStdout:true,script:"echo `date '+%Y-%m-%d %T %Z' -d @$timestamp `")
        //dingding
        def DINGTALK_TOKEN='2e7a689bd8794a2149d297d7f72a3f68f6023100acd4626cac0f35553730862c'  
        def AtUser='18817810841'
        // gitlab 
        def GIT_URL='http://gitlab.runxsports.com/customer-service/component-eureka-cs.git'
        def BRANCH='test'
        def GIT_NAME=sh(returnStdout:true,script:"echo ${GIT_URL}|awk -F'[:/.]' '{printf \$(NF-1)}'")
        def GIT_CRED_ID='927fc9e4-0150-4633-a33e-32835e7a1238'
        // ansible
        def INVENTORY='/etc/ansible/hosts'
        def PLAYBOOK='/etc/ansible/test-java-task.yml'
        def ASB_CRED_ID='93305ed6-fd67-4692-ad14-ff62d5365599'
        def log_folder='kefu-test'
        //spring
        def spring_profiles='test_cluster1'
        
    }
    post{
        always{
            sh """
            curl 'https://oapi.dingtalk.com/robot/send?access_token=${DINGTALK_TOKEN}' \
                -H 'Content-Type: application/json' \
                -d '
                {"msgtype": "markdown",
                    "markdown": {"title":"${JOB_NAME}-构建${currentBuild.currentResult}",
                        "text":"### ${JOB_NAME}-构建${currentBuild.currentResult}\n\n 
##### 执行任务: 测试+构建+部署
&nbsp;&nbsp;
##### 构建时间: ${BUILD_TIME}
&nbsp;&nbsp;
##### 项目名称: ${JOB_NAME}
&nbsp;&nbsp;
##### 构建编号: ${BUILD_DISPLAY_NAME}
&nbsp;&nbsp;
##### 版本编号: ${git_commit_id}
&nbsp;&nbsp;
##### 版本作者: ${git_author} 
&nbsp;&nbsp;
##### 版本状态: ${currentBuild.currentResult} 
[点击查看](${JENKINS_URL}blue/organizations/jenkins/${JOB_NAME}/detail/${JOB_NAME}/${BUILD_ID})"
                    }
                }
                '
            """
        }
    }
    stages{
        stage('get code'){
            steps{
                dir(path:"./${GIT_NAME}"){
                    git (
                        credentialsId: GIT_CRED_ID,
                        branch: BRANCH,
                        url: GIT_URL,
                        changelog: true
                    )
                    script{
                        env.git_commit_id=sh(
                            script: 'git rev-parse --short HEAD',
                            returnStdout:true
                        ).trim()
                        env.git_author=sh(
                            script: "git log -1 --pretty=format:'%an'",
                            returnStdout:true
                        ).trim()
                    }
                }

            }
        }
        stage('test'){
            agent{
                docker{
                    image 'maven:3.5'
                    label 'master'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps{
                dir(path:"../${JOB_NAME}/${GIT_NAME}"){
                    sh '''
                    mvn -v
                    mvn test
                    '''                    
                }
            }
        }
        stage('build'){
            agent {
                docker {
                    image 'maven:3.5'
                    label 'master'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps{
                dir(path:"../${JOB_NAME}/${GIT_NAME}"){
                     sh '''
                        mvn -B -DskipTests clean package
                        pwd target/*.jar
                        pwd
                    '''
                    script{
                        env.workdir=sh(
                            script: 'pwd',
                            returnStdout:true
                        ).trim()
                        env.jar_path=sh(
                            script: 'ls target/*.jar',
                            returnStdout:true
                        ).trim()
                        env.jar_name=sh(
                            script: "basename '$jar_path'",
                            returnStdout:true
                        ).trim()
                        env.jar_base_name=sh(
                            script: "basename '$jar_path' .jar",
                            returnStdout:true
                        ).trim()
                    }
                }
            }
        }
        stage('deploy'){
            agent {
                docker {
                    image 'qq79428316/club-ansible:2.4.2.0'
                    label 'master'
                    args '-v /data/ansible:/etc/ansible -v /data/jenkins/data:/mnt -e ANSIBLE_HOST_KEY_CHECKING=False'
                }
            }
            steps{
                sh """
                curl 'https://oapi.dingtalk.com/robot/send?access_token=${DINGTALK_TOKEN}' \
                    -H 'Content-Type: application/json' \
                    -d '
                    {"msgtype": "markdown",
                        "markdown": {"title":"请登录jnekins确认是否发布${JOB_NAME}",
                            "text":"### ${JOB_NAME}-构建${currentBuild.currentResult}\n\n
                            
##### 执行任务: 测试+构建+部署 
&nbsp;&nbsp;
##### 构建时间: ${BUILD_TIME}
&nbsp;&nbsp;
##### 项目名称: ${JOB_NAME}
&nbsp;&nbsp;
##### 构建编号: ${BUILD_DISPLAY_NAME}
&nbsp;&nbsp;
##### 版本编号: ${git_commit_id}
&nbsp;&nbsp;
##### 版本作者: ${git_author} 
&nbsp;&nbsp;
##### 版本状态: **${currentBuild.currentResult}**
##### **@${AtUser}** 
### 请登录jnekins确认是否发布\n\n
[点击查看](${JENKINS_URL}blue/organizations/jenkins/${JOB_NAME}/detail/${JOB_NAME}/${BUILD_ID})"
                        },
                        "at":{
                            "atMobiles":[
                                ${AtUser}
                            ],
                            "isAtAll":false
                        }
                    }
                    '
                """  
                input(
                    id: '立即发布',
                    message: '是否立即发布GIT版本编号'+git_commit_id+'的版本到'+BRANCH+'环境吗?',
                    ok: '立即发布.',
                )
                ansiColor('xterm') {
                    ansiblePlaybook(
                        playbook: PLAYBOOK,
                        inventory: INVENTORY,
                        credentialsId: ASB_CRED_ID,
                        colorized: true
                    )
                }
            }

        }
            
    }
}